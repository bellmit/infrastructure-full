stages:
  - build
  - docker
  - deploy

maven-build:
  image: maven:3-jdk-8
  stage: build
  script: "mvn package -B -Dmaven.test.skip=true -P k8s"
  artifacts:
    paths:
      - applications/mqtt-server/target/*.jar
#      - open/open-service/target/*.jar
#      - post/post-service/target/*.jar
#      - payment/payment-service/target/*.jar
#      - product/product-service/target/*.jar
#      - store/store-service/target/*.jar
#      - mq/mq-service/target/*.jar
#      - applications/mall-api/target/*.jar


docker-image-push:
  image: docker:latest
  services:
    - docker:dind
  stage: docker
  script:
    - docker login -u $docker_hub_username -p $docker_hub_password
    - docker build -t jast90/mqtt-server applications/mqtt-server
    - docker push jast90/mqtt-server
#    - docker build -t jast90/open-service open/open-service
#    - docker push jast90/open-service
#    - docker build -t jast90/post-service post/post-service
#    - docker push jast90/post-service
#    - docker build -t jast90/payment-service payment/payment-service
#    - docker push jast90/payment-service
#    - docker build -t jast90/product-service product/product-service
#    - docker push jast90/product-service
#    - docker build -t jast90/store-service store/store-service
#    - docker push jast90/store-service
#    - docker build -t jast90/mq-service mq/mq-service
#    - docker push jast90/mq-service
#    - docker build -t jast90/mall-api applications/mall-api
#    - docker push jast90/mall-api


#k8s-deploy:
#  image: roffe/kubectl
#  only:
#    - branches
#  stage: deploy
#  script:
#    - kubectl version
#    - kubectl apply -f k8s/mysql-deployment.yml
#    - kubectl apply -f k8s/oauth2-server-configMap.yaml
#    - kubectl apply -f k8s/deloyment/open-deployment.yaml
#    - kubectl apply -f k8s/deloyment/mall-api-deployment.yaml


