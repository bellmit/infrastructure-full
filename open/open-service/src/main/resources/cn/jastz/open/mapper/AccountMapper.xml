<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jastz.open.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="cn.jastz.open.entity.Account" >
    <id column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="app_id" property="appId" jdbcType="VARCHAR"/>
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="account_from" property="accountFrom" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.jastz.open.entity.Account" useGeneratedKeys="true" keyColumn="account_id" keyProperty="accountId">
    insert into account (account_id, app_id,account_name, first_name,
      last_name, phone, email, 
      account_from, updated_time
      )
    values (#{accountId,jdbcType=INTEGER}, #{appId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR},
      #{lastName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{accountFrom,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.jastz.open.entity.Account" >
    update account
    set app_id = #{appId,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      account_from = #{accountFrom,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select account_id,app_id, account_name, first_name, last_name, phone, email, account_from,
    created_time, updated_time
    from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select account_id, appid, account_name, first_name, last_name, phone, email, account_from,
    created_time, updated_time
    from account
  </select>
  <select id="selectByAccount" resultMap="BaseResultMap">
    select account_id,app_id, account_name, first_name, last_name, phone, email, account_from,
    created_time, updated_time
    from account
    where account_name = #{accountName,jdbcType=CHAR}
  </select>
  <select id="selectByAccountNameAndAppId" resultMap="BaseResultMap">
    select account_id,app_id, account_name, first_name, last_name, phone, email, account_from,
    created_time, updated_time
    from account
    where account_name = #{accountName,jdbcType=CHAR} and app_id = #{appId}
  </select>
</mapper>